type Device {
  id: ID!
  label: String!
  title: String!
  color: String!
  data: DeviceData!
}

type DeviceData {
  title: String!
  type: String!
  actual_value: Float!
  max_value: Float!
  min_value: Float!
  difference: Float!
  color: String!
}

type Notifications {
  events: Int!
  events_from_measure: Int!
  events_from_employees: Int!
  feedback: Int!
  suggestions: Int!
}

type Notification {
  id: ID!
  title: String!
  date: String!
}

type Analytics {
  events_total: Int!
  events_good_total: Int!
  events_normal_total: Int!
  events_bad_total: Int!
  feedback_total: Int!
}

type EventFromMeasureDetail {
  id: ID!
  title: String!
  place: String!
  date: String!
  threat: Int!
  is_unread: Boolean!
  justification: String!
}

type EventFromEmployeesDetail {
  id: ID!
  name: String!
  place: String!
  date: String!
  is_unread: Boolean!
  threat: Int!
  temperature: Int!
  breath: Int!
  how_feel: String!
}

type SuggestionDetail {
  id: ID!
  title: String!
  importance: Int!
  date: String!
  is_unread: Boolean!
  description: String!
  how_solve: String!
  why_important: String!
}

type FeedbackDetail {
  id: ID!
  name: String!
  total_score: Int!
  date: String!
  is_unread: Boolean!
  temperature: Int!
  breath: Int!
  how_feel: String!
}

type User {
  id: ID!
  first_name: String!
  last_name: String!
  full_name: String!
  email: String!
  role: String!
  pending_invitation: Boolean!
}

type OnboardingFormResult {
  productivity: Int!
  energy: Int!
  feedback: Int!
}

type RootQuery {
  devices(id: ID): [Device!]
  deviceData: DeviceData
  eventFromMeasureDetail: EventFromMeasureDetail
  eventsFromMeasure(id: ID): [EventFromMeasureDetail!]
  eventFromEmployeesDetail: EventFromEmployeesDetail
  eventsFromEmployees(id: ID): [EventFromEmployeesDetail!]
  eventsNotifications(id: ID): [Notification!]
  suggestions(id: ID): [SuggestionDetail!]
  suggestionDetail: SuggestionDetail
  feedback(id: ID): [FeedbackDetail!]
  feedbackNotifications(id: ID): [Notification!]
  feedbackDetail: FeedbackDetail
  notifications: Notifications
  user(id: ID): User
  manageUsers(id: ID): [User!]
  manageDevices(id: ID): [Device!]
  onboardingFormResult: OnboardingFormResult
  analytics: Analytics
}

schema {
  query: RootQuery
}

## Create custom scalar type for date
## Pagination
## Shimmer effect
